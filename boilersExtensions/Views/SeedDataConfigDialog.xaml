<Window
    x:Class="boilersExtensions.Dialogs.SeedDataConfigDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:boilersExtensions.Controls"
    xmlns:converters="clr-namespace:boilersExtensions.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:boilersExtensions.Dialogs"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="テストデータ生成設定"
    Width="600"
    Height="500"
    Background="#1F1F1F"
    ResizeMode="CanResize"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />

        <!--  ボタンスタイル  -->
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="8,2" />
            <Setter Property="MinWidth" Value="80" />
            <Setter Property="Height" Value="25" />
        </Style>

        <!--  ラベルスタイル  -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="2" />
        </Style>

        <!--  チェックボックススタイル  -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5" />
        </Style>

        <!--  テキストボックススタイル  -->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#333333" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="#555555" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="Margin" Value="2" />
        </Style>

        <!--  コンボボックススタイル  -->
        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderBrush" Value="#555555" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="Margin" Value="2" />
            <Style.Resources>
                <!--  ドロップダウンアイテムのスタイル  -->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Foreground" Value="Black" />
                </Style>
            </Style.Resources>
        </Style>

        <!--  データグリッドスタイル  -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="#222222" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="#333333" />
            <Setter Property="GridLinesVisibility" Value="All" />
            <Setter Property="HeadersVisibility" Value="All" />
            <Setter Property="RowBackground" Value="#333333" />
            <Setter Property="AlternatingRowBackground" Value="#3A3A3A" />
            <Setter Property="CanUserAddRows" Value="True" />
            <Setter Property="CanUserDeleteRows" Value="True" />
            <Setter Property="CanUserReorderColumns" Value="True" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="CanUserSortColumns" Value="True" />
        </Style>

        <!--  データグリッドヘッダースタイル  -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#444444" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="BorderBrush" Value="#555555" />
            <Setter Property="BorderThickness" Value="0,0,1,1" />
        </Style>

        <!--  データグリッドセルスタイル  -->
        <Style TargetType="DataGridCell">
            <Setter Property="BorderBrush" Value="#555555" />
            <Setter Property="BorderThickness" Value="0,0,1,1" />
            <Setter Property="Padding" Value="5" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#0A78D7" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  グループボックススタイル  -->
        <Style TargetType="GroupBox">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="#555555" />
            <Setter Property="Margin" Value="5" />
        </Style>

        <!--  DatePickerスタイル  -->
        <Style TargetType="DatePicker">
            <Setter Property="Background" Value="#333333" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="#555555" />
            <Style.Resources>
                <Style TargetType="DatePickerTextBox">
                    <Setter Property="Background" Value="#333333" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Style>
            </Style.Resources>
        </Style>
    </Window.Resources>

    <!--  メインコンテンツ  -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--  ローディング表示  -->
        <Grid
            Grid.RowSpan="3"
            Panel.ZIndex="1000"
            Background="#80000000"
            Visibility="{Binding IsProcessing.Value, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel
                MinWidth="300"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <controls:LoadingSpinner
                    Width="50"
                    Height="20"
                    Margin="0,0,0,10" />
                <TextBlock
                    Margin="0,0,0,10"
                    HorizontalAlignment="Center"
                    FontSize="14"
                    Foreground="White"
                    Text="{Binding ProcessingStatus.Value}" />
                <ProgressBar
                    Width="250"
                    Height="20"
                    Margin="0,0,0,5"
                    Maximum="100"
                    Minimum="0"
                    Value="{Binding Progress.Value}" />
                <TextBlock
                    HorizontalAlignment="Center"
                    FontSize="12"
                    Foreground="White"
                    Text="{Binding Progress.Value, StringFormat={}{0:0}%}" />
            </StackPanel>
        </Grid>

        <!--  ヘッダー部分  -->
        <Grid Grid.Row="0" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0">
                <TextBlock
                    FontSize="16"
                    FontWeight="Bold"
                    Text="テストデータ生成設定" />
                <TextBlock Margin="0,5,0,0" Text="{Binding TargetFileName.Value}" />
                <TextBlock Text="{Binding TargetType.Value}" />
            </StackPanel>

            <StackPanel
                Grid.Column="1"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock Text="データ件数: " />
                <TextBox
                    Width="60"
                    Margin="5,0"
                    VerticalContentAlignment="Center"
                    Text="{Binding DataCount.Value, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
        </Grid>

        <!--  コンテンツ部分 - TabControlを使用して複数の設定画面を切り替え  -->
        <TabControl
            Grid.Row="1"
            Margin="10"
            Background="#222222">
            <!--  タブ1: スキーマ設定  -->
            <TabItem Header="スキーマ設定">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!--  スキーマ操作ボタン群  -->
                    <StackPanel
                        Grid.Row="0"
                        Margin="0,5"
                        Orientation="Horizontal">
                        <Button Command="{Binding AddPropertyCommand}" Content="追加" />
                        <Button Command="{Binding RemovePropertyCommand}" Content="削除" />
                        <Button Command="{Binding MoveUpPropertyCommand}" Content="↑" />
                        <Button Command="{Binding MoveDownPropertyCommand}" Content="↓" />
                        <Button Command="{Binding LoadSchemaCommand}" Content="スキーマ読込" />
                    </StackPanel>

                    <!--  プロパティ一覧  -->
                    <DataGrid
                        Grid.Row="1"
                        Margin="0,5"
                        AutoGenerateColumns="False"
                        ItemsSource="{Binding Properties}"
                        SelectedItem="{Binding SelectedProperty.Value}">
                        <DataGrid.Columns>
                            <DataGridTextColumn
                                Width="*"
                                Binding="{Binding Name.Value}"
                                Header="プロパティ名">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="White" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn
                                Width="120"
                                Binding="{Binding Type.Value}"
                                Header="型">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="White" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridComboBoxColumn
                                Width="150"
                                Header="データタイプ"
                                SelectedItemBinding="{Binding DataType.Value}">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="Background" Value="#333333" />
                                        <Setter Property="Foreground" Value="White" />
                                        <Setter Property="ItemsSource" Value="{Binding DataContext.DataTypes, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Style.Resources>
                                            <Style TargetType="ComboBoxItem">
                                                <Setter Property="Background" Value="#333333" />
                                                <Setter Property="Foreground" Value="White" />
                                            </Style>
                                        </Style.Resources>
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="ItemsSource" Value="{Binding DataContext.DataTypes, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Style.Resources>
                                            <Style TargetType="ComboBoxItem">
                                                <Setter Property="Foreground" Value="Black" />
                                            </Style>
                                        </Style.Resources>
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>

            <!--  タブ2: データ形式設定  -->
            <TabItem Header="データ形式設定">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!--  データ形式設定  -->
                    <StackPanel Grid.Row="0" Margin="0,5,0,10">
                        <TextBlock FontWeight="Bold" Text="データ形式" />
                        <ComboBox
                            Margin="5"
                            ItemsSource="{Binding DataFormats}"
                            SelectedItem="{Binding SelectedDataFormat.Value}" />

                        <!--  C#形式の追加設定  -->
                        <StackPanel Visibility="{Binding IsCSharpFormat.Value, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="クラス名" />
                            <TextBox Text="{Binding ClassName.Value, UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox Content="プロパティ初期化子構文を使用する" IsChecked="{Binding UsePropertyInitializer.Value}" />
                            <CheckBox Content="静的メソッドとして作成する" IsChecked="{Binding IsStaticMethod.Value}" />
                        </StackPanel>

                        <!--  SQL形式の追加設定  -->
                        <StackPanel Visibility="{Binding IsSqlFormat.Value, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="テーブル名" />
                            <TextBox Text="{Binding TableName.Value, UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox Content="Transaction処理を含める" IsChecked="{Binding IncludeTransaction.Value}" />
                        </StackPanel>

                        <!--  XML形式の追加設定  -->
                        <StackPanel Visibility="{Binding IsXmlFormat.Value, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="ルート要素名" />
                            <TextBox Text="{Binding RootElementName.Value, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock Text="項目要素名" />
                            <TextBox Text="{Binding ItemElementName.Value, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </StackPanel>

                    <!--  プレビュー  -->
                    <GroupBox Grid.Row="1" Header="プレビュー">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <TextBox
                                Background="#222222"
                                BorderThickness="0"
                                FontFamily="Consolas"
                                FontSize="12"
                                IsReadOnly="True"
                                Text="{Binding PreviewText.Value}"
                                TextWrapping="NoWrap" />
                        </ScrollViewer>
                    </GroupBox>
                </Grid>
            </TabItem>

            <!--  タブ3: 詳細設定  -->
            <TabItem Header="詳細設定">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!--  各種オプション設定  -->
                    <StackPanel Grid.Row="0" Margin="0,5,0,10">
                        <TextBlock FontWeight="Bold" Text="データ生成オプション" />
                        <CheckBox Content="ランダム値を使用" IsChecked="{Binding UseRandomValues.Value}" />
                        <CheckBox Content="IDを自動採番" IsChecked="{Binding AutoGenerateIds.Value}" />
                        <CheckBox Content="NULL値を含める" IsChecked="{Binding IncludeNullValues.Value}" />

                        <TextBlock
                            Margin="0,10,0,0"
                            FontWeight="Bold"
                            Text="日付範囲" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="50" Text="開始日:" />
                            <DatePicker Margin="5,0" SelectedDate="{Binding StartDate.Value}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="50" Text="終了日:" />
                            <DatePicker Margin="5,0" SelectedDate="{Binding EndDate.Value}" />
                        </StackPanel>

                        <TextBlock
                            Margin="0,10,0,0"
                            FontWeight="Bold"
                            Text="数値範囲" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="50" Text="最小値:" />
                            <TextBox Width="80" Text="{Binding MinNumericValue.Value, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Width="50"
                                Margin="10,0,0,0"
                                Text="最大値:" />
                            <TextBox Width="80" Text="{Binding MaxNumericValue.Value, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </StackPanel>

                    <!--  サポート情報  -->
                    <GroupBox Grid.Row="1" Header="サポート情報">
                        <ScrollViewer>
                            <TextBlock
                                Margin="5"
                                FontSize="12"
                                Foreground="#CCCCCC"
                                TextWrapping="Wrap">
                                <Run Text="このツールはテストデータの生成を支援します。" />
                                <LineBreak />
                                <LineBreak />
                                <Run Text="サポートするデータ型:" />
                                <LineBreak />
                                <Run Text="- 文字列: 通常テキスト、Eメール、電話番号、住所など" />
                                <LineBreak />
                                <Run Text="- 数値: 整数、小数、通貨など" />
                                <LineBreak />
                                <Run Text="- 日付: 日付、時刻、日時" />
                                <LineBreak />
                                <Run Text="- ブール値: true/false" />
                                <LineBreak />
                                <Run Text="- GUID: 一意識別子" />
                                <LineBreak />
                                <LineBreak />
                                <Run Text="ヒント:" />
                                <LineBreak />
                                <Run Text="- 名前に「Id」「Name」「Email」などを含めるとそれらしい値を自動生成します" />
                                <LineBreak />
                                <Run Text="- プレビュータブで結果を確認してから生成できます" />
                            </TextBlock>
                        </ScrollViewer>
                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>

        <!--  フッター部分 - ボタン類  -->
        <StackPanel
            Grid.Row="2"
            Margin="10"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                Command="{Binding GenerateSeedDataCommand}"
                Content="生成"
                IsEnabled="{Binding IsProcessing.Value, Converter={StaticResource InverseBooleanConverter}}" />
            <Button
                Command="{Binding CancelCommand}"
                Content="キャンセル"
                IsEnabled="{Binding IsProcessing.Value, Converter={StaticResource InverseBooleanConverter}}" />
        </StackPanel>
    </Grid>
</Window>